// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$bottle-name: 'bottle';
$bottle-x: 110px;
$bottle-y: 0px;
$bottle-offset-x: -110px;
$bottle-offset-y: 0px;
$bottle-width: 13px;
$bottle-height: 35px;
$bottle-total-width: 123px;
$bottle-total-height: 87px;
$bottle-image: '../img/sprite-png.png';
$bottle: (110px, 0px, -110px, 0px, 13px, 35px, 123px, 87px, '../img/sprite-png.png', 'bottle', );
$bowl-name: 'bowl';
$bowl-x: 29px;
$bowl-y: 30px;
$bowl-offset-x: -29px;
$bowl-offset-y: -30px;
$bowl-width: 34px;
$bowl-height: 20px;
$bowl-total-width: 123px;
$bowl-total-height: 87px;
$bowl-image: '../img/sprite-png.png';
$bowl: (29px, 30px, -29px, -30px, 34px, 20px, 123px, 87px, '../img/sprite-png.png', 'bowl', );
$diamond-name: 'diamond';
$diamond-x: 74px;
$diamond-y: 0px;
$diamond-offset-x: -74px;
$diamond-offset-y: 0px;
$diamond-width: 32px;
$diamond-height: 27px;
$diamond-total-width: 123px;
$diamond-total-height: 87px;
$diamond-image: '../img/sprite-png.png';
$diamond: (74px, 0px, -74px, 0px, 32px, 27px, 123px, 87px, '../img/sprite-png.png', 'diamond', );
$dresser-name: 'dresser';
$dresser-x: 29px;
$dresser-y: 0px;
$dresser-offset-x: -29px;
$dresser-offset-y: 0px;
$dresser-width: 41px;
$dresser-height: 26px;
$dresser-total-width: 123px;
$dresser-total-height: 87px;
$dresser-image: '../img/sprite-png.png';
$dresser: (29px, 0px, -29px, 0px, 41px, 26px, 123px, 87px, '../img/sprite-png.png', 'dresser', );
$fork-name: 'fork';
$fork-x: 110px;
$fork-y: 39px;
$fork-offset-x: -110px;
$fork-offset-y: -39px;
$fork-width: 9px;
$fork-height: 33px;
$fork-total-width: 123px;
$fork-total-height: 87px;
$fork-image: '../img/sprite-png.png';
$fork: (110px, 39px, -110px, -39px, 9px, 33px, 123px, 87px, '../img/sprite-png.png', 'fork', );
$glass-name: 'glass';
$glass-x: 0px;
$glass-y: 56px;
$glass-offset-x: 0px;
$glass-offset-y: -56px;
$glass-width: 20px;
$glass-height: 31px;
$glass-total-width: 123px;
$glass-total-height: 87px;
$glass-image: '../img/sprite-png.png';
$glass: (0px, 56px, 0px, -56px, 20px, 31px, 123px, 87px, '../img/sprite-png.png', 'glass', );
$salt-bottle-name: 'salt-bottle';
$salt-bottle-x: 0px;
$salt-bottle-y: 0px;
$salt-bottle-offset-x: 0px;
$salt-bottle-offset-y: 0px;
$salt-bottle-width: 25px;
$salt-bottle-height: 52px;
$salt-bottle-total-width: 123px;
$salt-bottle-total-height: 87px;
$salt-bottle-image: '../img/sprite-png.png';
$salt-bottle: (0px, 0px, 0px, 0px, 25px, 52px, 123px, 87px, '../img/sprite-png.png', 'salt-bottle', );
$spritesheet-width: 123px;
$spritesheet-height: 87px;
$spritesheet-image: '../img/sprite-png.png';
$spritesheet-sprites: ($bottle, $bowl, $diamond, $dresser, $fork, $glass, $salt-bottle, );
$spritesheet: (123px, 87px, '../img/sprite-png.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
