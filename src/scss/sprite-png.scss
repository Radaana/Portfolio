// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$about-header-name: 'about-header';
$about-header-x: 510px;
$about-header-y: 317px;
$about-header-offset-x: -510px;
$about-header-offset-y: -317px;
$about-header-width: 357px;
$about-header-height: 125px;
$about-header-total-width: 1176px;
$about-header-total-height: 694px;
$about-header-image: '../img/sprite-png.png';
$about-header: (510px, 317px, -510px, -317px, 357px, 125px, 1176px, 694px, '../img/sprite-png.png', 'about-header', );
$blog-header-name: 'blog-header';
$blog-header-x: 0px;
$blog-header-y: 486px;
$blog-header-offset-x: 0px;
$blog-header-offset-y: -486px;
$blog-header-width: 303px;
$blog-header-height: 208px;
$blog-header-total-width: 1176px;
$blog-header-total-height: 694px;
$blog-header-image: '../img/sprite-png.png';
$blog-header: (0px, 486px, 0px, -486px, 303px, 208px, 1176px, 694px, '../img/sprite-png.png', 'blog-header', );
$portfolio-header-name: 'portfolio-header';
$portfolio-header-x: 0px;
$portfolio-header-y: 0px;
$portfolio-header-offset-x: 0px;
$portfolio-header-offset-y: 0px;
$portfolio-header-width: 1176px;
$portfolio-header-height: 313px;
$portfolio-header-total-width: 1176px;
$portfolio-header-total-height: 694px;
$portfolio-header-image: '../img/sprite-png.png';
$portfolio-header: (0px, 0px, 0px, 0px, 1176px, 313px, 1176px, 694px, '../img/sprite-png.png', 'portfolio-header', );
$works-header-name: 'works-header';
$works-header-x: 0px;
$works-header-y: 317px;
$works-header-offset-x: 0px;
$works-header-offset-y: -317px;
$works-header-width: 506px;
$works-header-height: 165px;
$works-header-total-width: 1176px;
$works-header-total-height: 694px;
$works-header-image: '../img/sprite-png.png';
$works-header: (0px, 317px, 0px, -317px, 506px, 165px, 1176px, 694px, '../img/sprite-png.png', 'works-header', );
$spritesheet-width: 1176px;
$spritesheet-height: 694px;
$spritesheet-image: '../img/sprite-png.png';
$spritesheet-sprites: ($about-header, $blog-header, $portfolio-header, $works-header, );
$spritesheet: (1176px, 694px, '../img/sprite-png.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
